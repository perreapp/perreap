<link rel="stylesheet" href="/stylesheets/main.css" type="text/css" />
<link rel="stylesheet" href="/stylesheets/roulette.css" />
<link href="https://fonts.googleapis.com/css?family=Fredoka+One&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Gloria+Hallelujah&display=swap" rel="stylesheet">
{{!-- <link rel="stylesheet" href="/stylesheets/style.css" /> --}}
<script type="text/javascript" src="/javascripts/Winwheel.js"></script>
<script type="text/javascript" src="/javascripts/TweenMax.min.js"></script>

{{!-- <script src="http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"></script> --}}
<script src="/javascripts/TriviaHandler.js"></script>



<div class="navigation">
    <a href="/user/dashboard"><img class="imgNav" src="/images/logoPerreApp.png" alt="Logo Image"></a>
    

    <ul>
        <li>
            <p>Hello {{this.username}}, Welcome to Hell</p>
        </li>
        <li><a href="/user/dashboard/"><input type="button" value="Dashboard"></a></li>
        <li><a href="/auth/logout"><input type="button" value="Logout"></a></li>
    </ul>

</div>






{{!-- <div class="center-container">
    <div id="trivia">
        <p>¡Enhorabuena {{this.username}}!</p>
        <p id="msg"></p>
       
        <p id="question"></p>
        <div id="answers">
        </div>
    </div>
</div> --}}
{{!-- <div class="container"> --}}
<div class="rlt-container">
    <div class="row">
        <div class="rlt-col col-md-6">
            <h1>El ruleteado es {{this.firstName}} {{this.lastName}} ({{this.username}})</h1>
            <img class="user-photo" src="{{this.photo}}" alt="{{this.username}}">
            <div id="trivia">
                <p>¡Enhorabuena {{this.username}}, es hora de ruletear!</p>
                <p id="msg"></p>
                {{!-- <img src="{{this.photo}}" alt="{{this.username}}"> --}}
                <p id="question"></p>
                <div id="answers">
                </div>
            </div>
        </div>
        <div class="rlt-col col-md-6">
            <div align="center">
                <table cellpadding="0" cellspacing="0" border="0">
                    <tr>
                        <td>
                            <div class="power_controls">
                                <br />
                                <br />
                                <table class="power" cellpadding="10" cellspacing="0">
                                    <tr>
                                        <th align="center">Power</th>
                                    </tr>
                                    <tr>
                                        <td><button id="pw3" onClick="powerSelected(3)">A todo poder</button></td>

                                        {{!-- <td width="78" align="center" id="pw3" onClick="powerSelected(3);">High</td> --}}
                                    </tr>
                                    <tr>
                                        <td><button id="pw2" onClick="powerSelected(2)">Fuerte</button></td>
                                        {{!-- <td align="center" id="pw2" onClick="powerSelected(2);">Med</td> --}}
                                    </tr>
                                    <tr>
                                        <td><button id="pw1" onClick="powerSelected(1)">Despacito</button></td>
                                        {{!-- <td align="center" id="pw1" onClick="powerSelected(1);">Low</td> --}}
                                    </tr>
                                </table>
                                <br />
                                <img id="spin_button" src="/images/spin_off.png" alt="Spin" onClick="startSpin();" />
                                <br /><br />
                                &nbsp;&nbsp;<a href="#" onClick="resetWheel(); return false;">Play
                                    Again</a><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(reset)
                            </div>
                        </td>
                        <td width="438" height="582" class="the_wheel" align="center" valign="center">
                            <canvas id="canvas" width="434" height="434">
                                <p style="{color: white}" align="center">Sorry, your browser doesn't support canvas.
                                    Please try another.</p>
                            </canvas>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
{{!-- </div> --}}
<script>

    // Lista de perreos
    // Traer desayuno al día siguiente DESAYUNO
    // Perrear al Dr. Vicario PERREO
    // Cantar en el clase de Web CANTAR
    // Pregunta en Data si han visto a tu perro de manera desesperada ¿Y TU PERRO?
    // Pegar un post-it a alguien de Data con tu número POST-IT
    // Perrear a Fabio durante 30 secs PERREO
    // Brindar por tu futura boda en las gradas de Ironhack BODA
    // Lo que elija la clase CLASE
    // Llamar a un familiar y decirle que estás embarazad@ EMBARAZO
    // Confesarle tu amor a Alvaro Cotelo por Slack CONFESIÓN DE AMOR
    // Nota “te espero en el baño en 5 min” a la persona que digan los TA ¿QUEDAMOS?
    // Quedarte mirando 30 secs por el cristal de web con cara de creepy CREEPY
    // Bailar la Macarena en una de las mesas communes LA MACARENA
    // Venganza VENGANZA
    // Hacer la croqueta de un lado a otro de la clase LA CROQUETA
    // Imitar a un mono loco y excitado EL MONO
    // Mandar una foto sexy a Soni y preguntarle si vale para LinkedIn FOTO SEXY
    // Preguntar a Dani sit e puede hacer algo por programación PREGUNTAR A DANI
    // Invitar a aperitivos en Ironbeers APERITIVOS

    //Connect to trivia API
    //const triviaAPI = new TriviaHandler("http://opentdb.com/api.php?amount=1")
    const triviaAPI = new TriviaHandler("https://opentdb.com/api.php?amount=1&category=9&difficulty=hard&type=multiple")
    // Create new wheel object specifying the parameters at creation time.
    let theWheel = new Winwheel({
        'outerRadius': 212,        // Set outer radius so wheel fits inside the background.
        'innerRadius': 75,         // Make wheel hollow so segments don't go all way to center.
        'textFontSize': 20,         // Set default font size for the segments.
        'textOrientation': 'horizontal', // Make text vertial so goes down from the outside of wheel.
        'textAlignment': 'outer',    // Align text to outside of wheel.
        'numSegments': 24,         // Specify number of segments.
        'segments':             // Define segments including colour and text.
            [                               // font size and test colour overridden on backrupt segments.
                // {'fillStyle' : '#ee1c24', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#3cb878', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f6989d', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#00aef0', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f26522', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#000000', 'text' : 'TRIVIA', 'textFontSize' : 16, 'textFillStyle' : '#ffffff'},
                // {'fillStyle' : '#e70697', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#fff200', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f6989d', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#ee1c24', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#3cb878', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f26522', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#a186be', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#fff200', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#00aef0', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#ee1c24', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f6989d', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#f26522', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#3cb878', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#000000', 'text' : 'TRIVIA', 'textFontSize' : 16, 'textFillStyle' : '#ffffff'},
                // {'fillStyle' : '#a186be', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#fff200', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#00aef0', 'text' : 'TRIVIA'},
                // {'fillStyle' : '#ffffff', 'text' : 'TRIVIA', 'textFontSize' : 12}
                { 'fillStyle': '#000000', 'text': 'TRIVIA', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#3cb878', 'text': 'DESAYUNO' },
                { 'fillStyle': '#f6989d', 'text': 'PERREO' },
                { 'fillStyle': '#00aef0', 'text': 'CANTAR' },
                { 'fillStyle': '#f26522', 'text': '¿Y TU PERRO?', 'textFontSize': 16 },
                { 'fillStyle': '#e20f0f', 'text': 'POST-IT', 'textFontSize': 16, 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#e70697', 'text': 'PERREO' },
                { 'fillStyle': '#000000', 'text': 'TRIVIA', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#f6989d', 'text': 'BODA' },
                { 'fillStyle': '#e20f0f', 'text': 'LA CLASE', 'textFontSize': 16, 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#3cb878', 'text': 'EMBARAZO' },
                { 'fillStyle': '#f26522', 'text': 'CONFIESA', 'textFontSize': 16 },
                { 'fillStyle': '#000000', 'text': 'TRIVIA', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#fff200', 'text': '¿QUEDAMOS?', 'textFontSize': 16 },
                { 'fillStyle': '#00aef0', 'text': 'CREEPY' },
                { 'fillStyle': '#ffffff', 'text': 'LA MACARENA', 'textFontSize': 16 },
                { 'fillStyle': '#000000', 'text': 'TRIVIA', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#e20f0f', 'text': 'LLAMADA REAL', 'textFontSize': 14 },
                { 'fillStyle': '#3cb878', 'text': 'LA CROQUETA', 'textFontSize': 16 },
                { 'fillStyle': '#000000', 'text': 'TRIVIA', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#e20f0f', 'text': 'EL MONO', 'textFillStyle': '#ffffff' },
                { 'fillStyle': '#fff200', 'text': 'FOTO SEXY' },
                { 'fillStyle': '#00aef0', 'text': 'PREGUNTAR', 'textFontSize': 16 },
                { 'fillStyle': '#ffffff', 'text': 'APERITIVOS' }
            ],
        'animation':           // Specify the animation to use.
        {
            'type': 'spinToStop',
            'duration': 10,    // Duration in seconds.
            'spins': 3,     // Default number of complete spins.
            'callbackFinished': alertPrize,
            'callbackSound': playSound,   // Function to call when the tick sound is to be triggered.
            'soundTrigger': 'pin'        // Specify pins are to trigger the sound, the other option is 'segment'.
        },
        'pins':				// Turn pins on.
        {
            'number': 24,
            'fillStyle': 'silver',
            'outerRadius': 4,
        }
    });

    // Loads the tick audio sound in to an audio object.
    let audio = new Audio('/sounds/tick.mp3');

    // This function is called when the sound is to be played.
    function playSound() {
        // Stop and rewind the sound if it already happens to be playing.
        audio.pause();
        audio.currentTime = 0;

        // Play the sound.
        audio.play();
    }

    // Vars used by the code in this page to do power controls.
    let wheelPower = 0;
    let wheelSpinning = false;

    // -------------------------------------------------------
    // Function to handle the onClick on the power buttons.
    // -------------------------------------------------------
    function powerSelected(powerLevel) {
        // Ensure that power can't be changed while wheel is spinning.
        if (wheelSpinning == false) {
            // Reset all to grey incase this is not the first time the user has selected the power.
            document.getElementById('pw1').className = "";
            document.getElementById('pw2').className = "";
            document.getElementById('pw3').className = "";

            // Now light up all cells below-and-including the one selected by changing the class.
            if (powerLevel >= 1) {
                document.getElementById('pw1').className = "pw1";
            }

            if (powerLevel >= 2) {
                document.getElementById('pw2').className = "pw2";
            }

            if (powerLevel >= 3) {
                document.getElementById('pw3').className = "pw3";
            }

            // Set wheelPower var used when spin button is clicked.
            wheelPower = powerLevel;

            // Light up the spin button by changing it's source image and adding a clickable class to it.
            document.getElementById('spin_button').src = "/images/spin_on.png" //"spin_on.png";
            document.getElementById('spin_button').className = "clickable";
        }
    }

    // -------------------------------------------------------
    // Click handler for spin button.
    // -------------------------------------------------------
    function startSpin() {
        // Ensure that spinning can't be clicked again while already running.
        if (wheelSpinning == false) {
            // Based on the power level selected adjust the number of spins for the wheel, the more times is has
            // to rotate with the duration of the animation the quicker the wheel spins.
            if (wheelPower == 1) {
                theWheel.animation.spins = 3;
            } else if (wheelPower == 2) {
                theWheel.animation.spins = 6;
            } else if (wheelPower == 3) {
                theWheel.animation.spins = 10;
            }

            // Disable the spin button so can't click again while wheel is spinning.
            document.getElementById('spin_button').src = "/images/spin_off.png" //"spin_off.png";
            document.getElementById('spin_button').className = "";

            // Begin the spin animation by calling startAnimation on the wheel object.
            theWheel.startAnimation();

            // Set to true so that power can't be changed and spin button re-enabled during
            // the current animation. The user will have to reset before spinning again.
            wheelSpinning = true;
        }
    }

    // -------------------------------------------------------
    // Function for reset button.
    // -------------------------------------------------------
    function resetWheel() {
        theWheel.stopAnimation(false);  // Stop the animation, false as param so does not call callback function.
        theWheel.rotationAngle = 0;     // Re-set the wheel angle to 0 degrees.
        theWheel.draw();                // Call draw to render changes to the wheel.

        document.getElementById('pw1').className = "";  // Remove all colours from the power level indicators.
        document.getElementById('pw2').className = "";
        document.getElementById('pw3').className = "";

        wheelSpinning = false;          // Reset to false to power buttons and spin can be clicked again.
    }

    // -------------------------------------------------------
    // Called when the spin animation has finished by the callback feature of the wheel because I specified callback in the parameters.
    // -------------------------------------------------------
    function alertPrize(indicatedSegment) {
        // Just alert to the user what happened.
        // In a real project probably want to do something more interesting than this with the result.
        if (indicatedSegment.text == 'TRIVIA') {
            triviaAPI.getQuestion()
        } else {
            triviaAPI.getPunishment(indicatedSegment.text)
        }
    }
</script>